'''
Created on Nov 11, 2018

@author: gsnyder

Given a CVE (or BDSA) identifier, find all affected project-versions and print out
their names, version(s), development phase, distribution, and last BOM update date
'''
import argparse
# pip install terminaltables
from terminaltables import AsciiTable

from blackduck.HubRestApi import HubInstance
from pprint import pprint

hub = HubInstance()

parser = argparse.ArgumentParser()
parser.add_argument("vulnerability", help="A CVE or BDSA number, e.g. CVE-2016-4009")
args = parser.parse_args()

affected_projects = hub.get_vulnerability_affected_projects(args.vulnerability.upper())

if 'totalCount' in affected_projects and affected_projects['totalCount'] > 0:
	ttable = [[
		"project-name", 
		"version", 
		"phase", 
		"distribution", 
		"last-bom-update", 
		"Owner Name", 
		"Owner email"]]

	for affected_project in affected_projects['items']:
		# Get the Owner info for the project
		project_json = hub.get_project_by_id(affected_project['project']['id'])
		if 'projectOwner' in project_json:
			owner_response = hub.execute_get(project_json['projectOwner'])
			owner_json = owner_response.json()
			if 'firstName' in owner_json and 'lastName' in owner_json:
				owner_name = owner_json['firstName'] + ' ' + owner_json['lastName']
			else:
				owner_name = "None supplied"
			if 'email' in owner_json:
				owner_email = owner_json['email']
			else:
				owner_email = "None supplied"
		else:
			owner_name = owner_email = "None supplied"

		project_name = affected_project['project']['name']
		version = affected_project['release']['version']

		# Development phase does not appear to be in the payload returned by the affected projects
		# endpoint so we need to fetch it from the project-version endpoint
		project_id = affected_project['project']['id']
		version_id = affected_project['release']['id']

		project_version_info = hub.get_version_by_id(project_id, version_id)

		phase = project_version_info['phase']
		distribution = project_version_info['distribution']
		last_bom_update = project_version_info['lastBomUpdateDate']

		ttable.append([
			project_name, 
			version, 
			phase, 
			distribution, 
			last_bom_update, 
			owner_name, 
			owner_email])
	print(AsciiTable(ttable).table)
else:
	print("No affected projects found for this vulnerability {}".format(args.vulnerability.upper()))